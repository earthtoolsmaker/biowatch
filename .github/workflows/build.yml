name: Build/Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-22.04]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      # - name: Install Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.11'

      # - name: Install Miniforge
      #   uses: conda-incubator/setup-miniconda@v3
      #   with:
      #     activate-environment: species-env
      #     python-version: '3.11'
      #     auto-update-conda: true

      # - name: Install Python dependencies
      #   shell: bash -l {0}
      #   run: |
      #     conda run pip install flask flask-cors
      #     conda run pip install speciesnet --use-pep517
      #     conda list

      # - name: Compress conda environment
      #   shell: bash -l {0}
      #   run: |
      #     mkdir -p dist
      #     CONDA_BASE=$(conda info --base)
      #     CONDA_ENV_PATH=$CONDA_BASE/envs/species-env

      #     tar -czf dist/species-env-${{ runner.os }}.tar.gz -C $CONDA_BASE/envs species-env

      # - name: Upload to Cloudflare R2
      #   uses: shallwefootball/s3-upload-action@master
      #   with:
      #     aws_key_id: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
      #     aws_bucket: ${{ secrets.CLOUDFLARE_R2_BUCKET_NAME }}
      #     endpoint: ${{ secrets.CLOUDFLARE_R2_ENDPOINT }}
      #     source_dir: dist
      #     destination_dir: conda-environments

      - name: Install Node.js dependencies
        run: |
          npm install

      - name: Build on MacOS
        env:
          CSC_LINK: ${{ secrets.APPLE_SIGNING_CERTIFICATE_BASE64 }}
          CSC_KEY_PASSWORD: ${{ secrets.APPLE_SIGNING_CERTIFICATE_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        if: matrix.os == 'macos-latest'
        run: npm run build:mac

      - name: Build on Linux
        if: matrix.os == 'ubuntu-22.04'
        run: npm run build:linux

      - name: Build on Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win
