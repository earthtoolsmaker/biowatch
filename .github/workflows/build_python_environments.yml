# Generate the python environments required to run the ML models as local
# webservers
---
name: Build and Upload Python Environments

on:
  push:
    branches:
      # - main
      - '*'
      - arthur/improve-conda-environment-building
    # paths:
    #   - 'python-environments/**'

jobs:
  build_and_upload_common_python_environment:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # FIXME: for faster iteration
        # os: [windows-latest, macos-latest, ubuntu-22.04]
        os: [macos-latest]
        # os: [windows-latest]
    steps:
      - name: Run step when directory changes
        run: echo "This workflow runs only when files in 'my-directory' are modified."

      - name: Install Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: common
          python-version: '3.12'
          auto-update-conda: true

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Generate requirements.txt file
        shell: bash -l {0}
        run: |
          cd python-environments/common
          uv sync
          uv pip compile pyproject.toml --managed-python -o requirements.txt
          cat requirements.txt

      # For now we replicate what is done in the pyproject.toml using pip,
      # which is not ideal.
      # Long run we should use only `uv` to generate the python environment.
      - name: Install Python dependencies
        shell: bash -l {0}
        run: |
          cd python-environments/common
          conda run pip install -r requirements.txt --use-pep517
          conda list

      - name: Compress conda environment
        shell: bash -l {0}
        run: |
          mkdir -p dist
          CONDA_BASE=$(conda info --base)
          CONDA_ENV_PATH=$CONDA_BASE/envs/common
          ENVIRONMENT_VERSION=$(grep 'version' ./python-environments/common/pyproject.toml | awk -F '=' '{print $2}' | tr -d ' "')
          echo "${ENVIRONMENT_VERSION}"

          tar -czf dist/common-"${ENVIRONMENT_VERSION}"-${{ runner.os }}.tar.gz -C "${CONDA_BASE}"/envs common

      - name: Upload to Cloudflare R2
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
          aws_bucket: ${{ secrets.CLOUDFLARE_R2_BUCKET_NAME }}
          endpoint: ${{ secrets.CLOUDFLARE_R2_ENDPOINT }}
          source_dir: dist
          destination_dir: conda-environments
